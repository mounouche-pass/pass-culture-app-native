name: "[reusable] test lint types and unit"

on:
  push

#concurrency:
#  group: ${{ github.head_ref }}
#  cancel-in-progress: true

jobs:
  test-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install
      - name: Test lint
        run: yarn test:lint

  test-types:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --prefer-offline
      - name: Test types
        run: yarn test:types

  test-unit:
    runs-on: ubuntu-latest-4-cores
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --prefer-offline
      - name: Test unit
        id: test-unit
        run: NODE_OPTIONS='--openssl-legacy-provider --max-old-space-size=4096' yarn test:unit
        continue-on-error: true

      - name: Save test results for sonarcloud
        if: ${{ github.ref == 'refs/heads/master' && always() && steps.test-unit.status == 'failure' }}
        uses: actions/upload-artifact@v2
        with:
          name: test-coverage
          path: coverage
          retention-days: 1
          if-no-files-found: warn

#      - name: Slack Notification
#        uses: rtCamp/action-slack-notify@v2
#        if: ${{ github.ref == 'refs/heads/master' && always() &&  && steps.test-unit.status == 'failure' }}
#        env:
#          SLACK_CHANNEL: dev-mobile
#          SLACK_COLOR: '#FF0000'
#          SLACK_MESSAGE: 'App Native test unit fail :heavy_multiplication_x:'
#          SLACK_TITLE: Test unit App Native
#          SLACK_USERNAME: GH App Native
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  test-unit-web:
    runs-on: ubuntu-latest-4-cores
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: 'node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install dependencies
        run: yarn install --prefer-offline
      - name: Test unit web
        run: NODE_OPTIONS='--openssl-legacy-provider --max-old-space-size=4096' yarn test:unit:web

#      - name: Slack Notification
#        uses: rtCamp/action-slack-notify@v2
#        if: ${{ github.ref == 'refs/heads/master' && always() &&  && steps.test-unit.status == 'failure' }}
#        env:
#          SLACK_CHANNEL: sh√©rif
#          SLACK_COLOR: '#FF0000'
#          SLACK_MESSAGE: 'App Native test unit Web fail :heavy_multiplication_x:'
#          SLACK_TITLE: Test unit App Native Web
#          SLACK_USERNAME: GH App Native
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  sonarscanner:
    runs-on: ubuntu-latest
    needs: test-unit
    steps:
      - uses: actions/checkout@v3
      - name: Download test results for sonarcloud
        uses: actions/download-artifact@v3
        with:
          name: test-coverage

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .
